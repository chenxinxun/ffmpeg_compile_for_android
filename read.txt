====脚本作用====
编译Android平台的FFmpeg。集成处理MP3的Lame，处理H264编码的x264，处理aac音乐的fdk-acc，处理https的openssl。

====环境准备====
使用windows进行交叉编译。

windows下安装msys2，注意安装目录能用空格，当然也不能安装在program files目录，否则软件不能正常运作。

安装好后，在msys2的命令行下执行pacman -Syu进行更新。关闭msys2并重启，再执行pacman -Su。

安装必要软件，执行：
pacman -S make，安装make工具。
pacman -S yasm，安装yasm汇编器。
pacman -S diffutils，安装文件比对工具。如果不安装在编译FFmpeg时会出现cmp命令未找到的问题，同时会影响编译输出（我的状况是有一个库编译为了静态库）。

下载NDK。在Android Studio中可以下载，找到其存储位置，脚本中需要配置相关路径，要确保正确。

====脚本相关====
将所有脚本与要编译的库放在同一目录下，例如如下结构，库源码与脚本都放在了libs目录下：
libs
--lame（文件夹）
--x264（文件夹）
--fdk-aac（文件夹）
--build-lame.sh（脚本）
--...
--...

修改config.sh中的ANDROID_NDK_ROOT、TOOLCHAIN变量为自己环境的值。

将库源码放到相应的目录下（lame、openssl等文件夹下），或者修改各个构建脚本（build-x264-all.sh和config.sh除外）中“cd xxx”的xxx为自己库源码所在的位置。

====编译====
先生成lame、X264、fdk-acc、openssl，最后生成FFmpeg，将前面四个库集成生成到FFmpeg。

打开msys2，切换到脚本所在目录，执行库编译命令，如：./build-lame.sh arm64-v8a。脚本名后面跟上要编译的平台架构，具体可参看config.sh和build-x264-all.sh。若要生成全平台库，参考build-x264-all.sh编写相应库的全平台生成脚本。

====特别注意====
脚本中configure选项要换行时，\后面不能有空格，否则会引发--xxx command not found错误，从而影响生成/ffbuild/config.mk，导致不能编译。

====说明====
config.sh，该脚本定义了基础变量，在其他脚本中引用。

编译后会在脚本所在目录生成一个名为libs的目录，编译好的库都输出到该目录。

lame、openssl、fdk-acc、X264可以编译为静态库，FFmpeg链接其他库编译为动态库。

====问题====
如果x264不能顺利编译，可以将--enable-shared选项删除，只开启静态库编译--enable-static，将其编译为静态库。在编译的时候遇到静态与动态库都编译时好像出了问题，故有该记录。


====版本信息====
fdk-aac 2.0.1
ffmpeg 4.3.1
lame 3.100
openssl 1.1.1i
x264 (2020.12.31最新版）
ndk 21